<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-06-20T10:08:53.836Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2020/06/20/code-for-TM/"/>
    <id>http://yoursite.com/2020/06/20/code-for-TM/</id>
    <published>2020-06-20T10:05:06.000Z</published>
    <updated>2020-06-20T10:08:53.836Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>author: Yu Zhang  张宇</p><p>student ID : 17130110026</p><p>Serial number: 28</p></blockquote><p>The PDF is provided with a table of contents. Opening the table of contents may make it easy for you to watch</p><h4 id="28-Convert-an-octal-number-into-a-binary-number"><a href="#28-Convert-an-octal-number-into-a-binary-number" class="headerlink" title="28.Convert an octal number into a binary number"></a>28.Convert an octal number into a binary number</h4><p> <img src="/2020/06/20/code-for-TM/assets/3.png" alt="3"></p><ul><li>Convert an octal number to a binary number</li><li>10</li><li>to</li><li>1000</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">0 0 _ r 0</div><div class="line">0 _ 0 * halt</div><div class="line">0 * * * 1</div><div class="line">1 _ _ r 1</div><div class="line">1 * * r 1a</div><div class="line">1a * * r 1a</div><div class="line">1a _ _ l 2   </div><div class="line">1b _ _ r 1   </div><div class="line">1b * * r 1b</div><div class="line">2 1 0 l 3   </div><div class="line">2 2 1 l 3</div><div class="line">2 3 2 l 3</div><div class="line">2 4 3 l 3</div><div class="line">2 5 4 l 3</div><div class="line">2 6 5 l 3</div><div class="line">2 7 6 l 3</div><div class="line">2 0 7 l 2   </div><div class="line">2 _ _ r 20 </div><div class="line">3 * * l 3  </div><div class="line">3 _ _ l 4  </div><div class="line">4 * 1 r 1b </div><div class="line">4 1 0 l 4 </div><div class="line">20 _ _ l 21</div><div class="line">20 * _ r 20 </div><div class="line">21 _ _ l 21</div><div class="line">21 * * l 21a</div><div class="line">21a * * l 21a</div><div class="line">21a _ _ r halt</div></pre></td></tr></table></figure><p><strong>In fact, I finished my homework before the lab2 exercise class, but I didn’t know which questions to complete, so I chose a few questions to write. And I heard that 19 questions is the most difficult one, so I tried to write this question.</strong></p><h4 id="19-Middle-part-of-a-word-divided-in-3-parts"><a href="#19-Middle-part-of-a-word-divided-in-3-parts" class="headerlink" title="19.Middle part of a word divided in 3 parts"></a>19.Middle part of a word divided in 3 parts</h4><p>First, I need to elaborate on my understanding of the subject. I think the meaning of this topic is to divide a word into three parts, and then keep the middle part. If the number of word letters is exactly equal to a multiple of three, then the strategy of three equal parts will be selected, otherwise the number of letters will be divided by three ,round up, and keep the number of letters in this number.</p><ul><li>sample1: Word length is a multiple of 3<ul><li>input: triple</li><li>Word length: 6</li><li>Divided into three parts : tr   ip  le</li><li>output:   ip</li></ul></li><li>sample2: Word length is not a multiple of 3<ul><li>input    :  woolgathering</li><li>Word length:  13</li><li>13/3   = 4 ····· 1    </li><li>$ \lceil \frac{13}{3} \rceil$   =  5</li><li>Divided into three parts :   wool  gathe  ring</li><li>output:    gathe</li></ul></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div></pre></td><td class="code"><pre><div class="line">0 * * * 1</div><div class="line">1 a # r sa</div><div class="line">1 b # r sb</div><div class="line">1 c # r sc</div><div class="line">1 d # r sd</div><div class="line">1 e # r se</div><div class="line">1 f # r sf</div><div class="line">1 g # r sg</div><div class="line">1 h # r sh</div><div class="line">1 i # r si</div><div class="line">1 j # r sj</div><div class="line">1 k # r sk</div><div class="line">1 l # r sl</div><div class="line">1 m # r sm</div><div class="line">1 n # r sn</div><div class="line">1 o # r so</div><div class="line">1 p # r sp</div><div class="line">1 q # r sq</div><div class="line">1 r # r sr</div><div class="line">1 s # r ss</div><div class="line">1 t # r st</div><div class="line">1 u # r su</div><div class="line">1 v # r sv</div><div class="line">1 w # r sw</div><div class="line">1 x # r sx</div><div class="line">1 y # r sy</div><div class="line">1 z # r sz</div><div class="line"></div><div class="line">1 _ _ l mi</div><div class="line">sa * * r sa</div><div class="line">sa _ a l s0</div><div class="line">sb * * r sb</div><div class="line">sb _ b l s0</div><div class="line">sc * * r sc</div><div class="line">sc _ c l s0</div><div class="line">sd * * r sd</div><div class="line">sd _ d l s0</div><div class="line">se * * r se</div><div class="line">se _ e l s0</div><div class="line">sf * * r sf</div><div class="line">sf _ f l s0</div><div class="line">sg * * r sg</div><div class="line">sg _ g l s0</div><div class="line">sh * * r sh</div><div class="line">sh _ h l s0</div><div class="line">si * * r si</div><div class="line">si _ i l s0</div><div class="line">sj * * r sj</div><div class="line">sj _ j l s0</div><div class="line">sk * * r sk</div><div class="line">sk _ k l s0</div><div class="line">sl * * r sl</div><div class="line">sl _ l l s0</div><div class="line">sm * * r sm</div><div class="line">sm _ m l s0</div><div class="line">sn * * r sn</div><div class="line">sn _ n l s0</div><div class="line">so * * r so</div><div class="line">so _ o l s0</div><div class="line">sp * * r sp</div><div class="line">sp _ p l s0</div><div class="line">sq * * r sq</div><div class="line">sq _ q l s0</div><div class="line">sr * * r sr</div><div class="line">sr _ r l s0</div><div class="line">ss * * r ss</div><div class="line">ss _ s l s0</div><div class="line">st * * r st</div><div class="line">st _ t l s0</div><div class="line">su * * r su</div><div class="line">su _ u l s0</div><div class="line">sv * * r sv</div><div class="line">sv _ v l s0</div><div class="line">sw * * r sw</div><div class="line">sw _ w l s0</div><div class="line">sx * * r sx</div><div class="line">sx _ x l s0</div><div class="line">sy * * r sy</div><div class="line">sy _ y l s0</div><div class="line">sz * * r sz</div><div class="line">sz _ z l s0</div><div class="line"></div><div class="line">s0 * * l s0</div><div class="line">s0 _ _ l s1</div><div class="line"></div><div class="line">s1 0 1 * s</div><div class="line">s1 1 2 * s</div><div class="line">s1 2 0 l s1</div><div class="line">s1 _ 1 * s</div><div class="line">s * * r s</div><div class="line">s _ _ r t</div><div class="line"></div><div class="line">t * * r t</div><div class="line">t _ _ l t1</div><div class="line">t1 a _ l ta</div><div class="line">t1 b _ l tb</div><div class="line">t1 c _ l tc</div><div class="line">t1 d _ l td</div><div class="line">t1 e _ l te</div><div class="line">t1 f _ l tf</div><div class="line">t1 g _ l tg</div><div class="line">t1 h _ l th</div><div class="line">t1 i _ l ti</div><div class="line">t1 j _ l tj</div><div class="line">t1 k _ l tk</div><div class="line">t1 l _ l tl</div><div class="line">t1 m _ l tm</div><div class="line">t1 n _ l tn</div><div class="line">t1 o _ l to</div><div class="line">t1 p _ l tp</div><div class="line">t1 q _ l tq</div><div class="line">t1 r _ l tr</div><div class="line">t1 s _ l ts</div><div class="line">t1 t _ l tt</div><div class="line">t1 u _ l tu</div><div class="line">t1 v _ l tv</div><div class="line">t1 w _ l tw</div><div class="line">t1 x _ l tx</div><div class="line">t1 y _ l ty</div><div class="line">t1 z _ l tz</div><div class="line">ta * * l ta</div><div class="line">ta # a r 1</div><div class="line">tb * * l tb</div><div class="line">tb # b r 1</div><div class="line">tc * * l tc</div><div class="line">tc # c r 1</div><div class="line">td * * l td</div><div class="line">td # d r 1</div><div class="line">te * * l te</div><div class="line">te # e r 1</div><div class="line">tf * * l tf</div><div class="line">tf # f r 1</div><div class="line">tg * * l tg</div><div class="line">tg # g r 1</div><div class="line">th * * l th</div><div class="line">th # h r 1</div><div class="line">ti * * l ti</div><div class="line">ti # i r 1</div><div class="line">tj * * l tj</div><div class="line">tj # j r 1</div><div class="line">tk * * l tk</div><div class="line">tk # k r 1</div><div class="line">tl * * l tl</div><div class="line">tl # l r 1</div><div class="line">tm * * l tm</div><div class="line">tm # m r 1</div><div class="line">tn * * l tn</div><div class="line">tn # n r 1</div><div class="line">to * * l to</div><div class="line">to # o r 1</div><div class="line">tp * * l tp</div><div class="line">tp # p r 1</div><div class="line">tq * * l tq</div><div class="line">tq # q r 1</div><div class="line">tr * * l tr</div><div class="line">tr # r r 1</div><div class="line">ts * * l ts</div><div class="line">ts # s r 1</div><div class="line">tt * * l tt</div><div class="line">tt # t r 1</div><div class="line">tu * * l tu</div><div class="line">tu # u r 1</div><div class="line">tv * * l tv</div><div class="line">tv # v r 1</div><div class="line">tw * * l tw</div><div class="line">tw # w r 1</div><div class="line">tx * * l tx</div><div class="line">tx # x r 1</div><div class="line">ty * * l ty</div><div class="line">ty # y r 1</div><div class="line">tz * * l tz</div><div class="line">tz # z r 1</div><div class="line"></div><div class="line">mi * * l mi</div><div class="line">mi _ _ l mi1</div><div class="line">mi1 * _ l mid</div><div class="line">mid * * l mid</div><div class="line">mid _ _ l mid</div><div class="line">mid 0 0 * c</div><div class="line">mid 1 1 * c</div><div class="line">mid 2 2 * c</div><div class="line">c _ _ * halt</div><div class="line">c 0 2 l c</div><div class="line">c 2 1 r c1</div><div class="line">c 1 0 * c0</div><div class="line">c0 * * l c0</div><div class="line">c0 _ _ r c2</div><div class="line">c2 0 _ r ct</div><div class="line">ct * * * c1</div><div class="line">ct _ _ * ec1</div><div class="line">c2 * * * c1</div><div class="line">c1 * * r c1</div><div class="line">c1 _ _ r cle</div><div class="line">ec1 * * r ec1</div><div class="line">ec1 _ _ r ecle</div><div class="line"></div><div class="line">cle _ _ r cle</div><div class="line">cle * _ r cle1</div><div class="line">cle1 * * r cle1</div><div class="line">cle1 _ _ l cle2</div><div class="line">cle2 * _ l mid</div><div class="line"></div><div class="line">ecle _ _ r ecle</div><div class="line">ecle * _ r ecle1</div><div class="line">ecle1 * * r ecle1</div><div class="line">ecle1 _ _ l ecle2</div><div class="line">ecle2 * _ l halt</div></pre></td></tr></table></figure><h2 id="1-and-1-in-binary"><a href="#1-and-1-in-binary" class="headerlink" title="+1 and -1 in binary"></a>+1 and -1 in binary</h2><p>This is what the professor asked us to do in the QQ group</p><h4 id="1-in-binary"><a href="#1-in-binary" class="headerlink" title="+1 in binary"></a>+1 in binary</h4><p><img src="/2020/06/20/code-for-TM/assets/1.png" alt="1"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">; Binary +1 - a binary numbers + 1</div><div class="line">; 111</div><div class="line">; to</div><div class="line">; 1000</div><div class="line">0 * * r 0</div><div class="line">0 _ _  l 1</div><div class="line">1 0 1 * halt</div><div class="line">1 1 0 l 1</div><div class="line">1 _ 1 * halt</div></pre></td></tr></table></figure><h4 id="1-in-binary-1"><a href="#1-in-binary-1" class="headerlink" title="-1 in binary"></a>-1 in binary</h4><p><img src="/2020/06/20/code-for-TM/assets/2.png" alt="2"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">; Binary - 1 - a binary numbers - 1</div><div class="line">; 111</div><div class="line">; to</div><div class="line">; 110</div><div class="line">0 0 0 r 0</div><div class="line">0 _ _ l x</div><div class="line">0 1 1 * 1</div><div class="line">1 * * r 1</div><div class="line">1 _ _ l 2</div><div class="line">2 1 0 * halt</div><div class="line">2 0 1 l 3</div><div class="line">3 1 0 l 4</div><div class="line">3 0 1 l 3</div><div class="line">4 * * l 4</div><div class="line">4 _ _ r 5</div><div class="line">5 0 _ r 5</div><div class="line">5 1 1 * halt</div><div class="line">x 0 _ l x</div><div class="line">x 1 _ l x</div><div class="line">x _ e r x1</div><div class="line">x1 _ r r x2</div><div class="line">x2 _ r r x3</div><div class="line">x3 _ o r x4</div><div class="line">x4 _ r r halt</div></pre></td></tr></table></figure><h2 id="Some-questions-I-choose-to-do"><a href="#Some-questions-I-choose-to-do" class="headerlink" title="Some questions I choose to do"></a>Some questions I choose to do</h2><p>I started this assignment at 11:15 on June 17, 2020, so I choose 2, 20, 6, 17, 11, 15 to complete.</p><p>The understanding of the topic may not be very correct, because at that time, the meaning of the first part and the second part was not very understood</p><h4 id="2-Division-by-2-in-unary-system-Round-down"><a href="#2-Division-by-2-in-unary-system-Round-down" class="headerlink" title="2.Division by 2 in unary system(Round down)"></a>2.Division by 2 in unary system(Round down)</h4><ul><li><p>input: 11111</p></li><li><p>output : 11</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">0 1 x r 1</div><div class="line">0 _ _ l 2</div><div class="line">1 1 1 r 0</div><div class="line">1 _ _ l 2</div><div class="line">2 1 x r 3</div><div class="line">2 x x l 2</div><div class="line">2 _ _ r 5</div><div class="line">3 x x r 3</div><div class="line">3 1 1 l 4</div><div class="line">3 _ _ l 4</div><div class="line">4 * 1 l 2</div><div class="line">5 x _ r 5</div><div class="line">5 1 1 * halt</div></pre></td></tr></table></figure><h4 id="20-Erase-the-second-part-of-a-word-in-alphabet-a-b-c"><a href="#20-Erase-the-second-part-of-a-word-in-alphabet-a-b-c" class="headerlink" title="20.Erase the second part of a word in alphabet {a,b,c}"></a>20.Erase the second part of a word in alphabet {a,b,c}</h4><ul><li><p>input: abcabc</p></li><li><p>output acabc</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">0 a _ r a</div><div class="line">0 b _ r b</div><div class="line">0 c _ r c</div><div class="line">a * a * halt</div><div class="line">b * b * halt</div><div class="line">c * c * halt</div></pre></td></tr></table></figure><h4 id="6-Erase-symbol-“a”-within-a-word-in-alphabet-a-b-c"><a href="#6-Erase-symbol-“a”-within-a-word-in-alphabet-a-b-c" class="headerlink" title="6.Erase symbol “a” within a word in alphabet {a,b,c}"></a>6.Erase symbol “a” within a word in alphabet {a,b,c}</h4><p>input :  abccbaaaaaabc</p><p>output : bccbbc</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">0 a x r 0</div><div class="line">0 * * r 0</div><div class="line">0 _ _ l 1</div><div class="line">1 x x l 1</div><div class="line">1 b x r b</div><div class="line">1 c x r c</div><div class="line">1 _ _ r e</div><div class="line">b x x r b</div><div class="line">b * * l b1</div><div class="line">b1 * b l 1</div><div class="line">c x x r c</div><div class="line">c * * l c1</div><div class="line">c1 * c l 1</div><div class="line">e x _ r e</div><div class="line">e * * * halt</div></pre></td></tr></table></figure><h4 id="17-Insert-“1”-after-each-repetition-of-“0”-in-binary-number"><a href="#17-Insert-“1”-after-each-repetition-of-“0”-in-binary-number" class="headerlink" title="17.Insert “1” after each repetition of “0” in binary number"></a>17.Insert “1” after each repetition of “0” in binary number</h4><p>intput : 1000110010100</p><p>output : 1001011001101001</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">0 1 1 r 0</div><div class="line">0 _ _ l e</div><div class="line">0 0 0 r 1e</div><div class="line">1e 0 x r 1</div><div class="line">1e 1 1 r 0 </div><div class="line">1 1 y r x1</div><div class="line">1 0 y r x0</div><div class="line">1 _ 1 * e</div><div class="line">x0 0 0 r x0</div><div class="line">x0 1 0 r x1</div><div class="line">x0 _ 0 l b</div><div class="line">x1 0 1 r x0</div><div class="line">x1 1 1 r x1</div><div class="line">x1 _ 1 l b</div><div class="line">b y y r 0</div><div class="line">b * * l b</div><div class="line">e _ _ * halt</div><div class="line">e y 1 l e</div><div class="line">e x 0 l e</div><div class="line">e * * l e</div></pre></td></tr></table></figure><h4 id="11-Interleave-two-words-in-alphabet-a-b"><a href="#11-Interleave-two-words-in-alphabet-a-b" class="headerlink" title="11.Interleave two words in alphabet {a,b}"></a>11.Interleave two words in alphabet {a,b}</h4><p><strong>Note: In order to make the two ab words interleave, please ensure that the two ab words have the same length</strong></p><p>intput :       aaa bbb<br>                    a  a  a<br>                      b  b   b<br>output:       ababab</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line">0 * * r 0</div><div class="line">0 _ _ r 1</div><div class="line">1 * * r 1</div><div class="line">1 _ _ l 2</div><div class="line">2 a _ l a1</div><div class="line">2 b _ l b1</div><div class="line">2 * * * wir_mid</div><div class="line">wir_mid _ _ l wir</div><div class="line">a1 * * l a1</div><div class="line">a1 _ _ l a2</div><div class="line">a2 a 0 r 0</div><div class="line">a2 b 2 r 0</div><div class="line">a2 * * l a2</div><div class="line">b1 * * l b1</div><div class="line">b1 _ _ l b2</div><div class="line">b2 a 1 r 0</div><div class="line">b2 b 3 r 0</div><div class="line">b2 * * l b2</div><div class="line">wir * * l wir</div><div class="line">wir _ _ r print</div><div class="line">print _ _ l head</div><div class="line">print * * r printmid</div><div class="line">printmid 0 s r print0</div><div class="line">printmid 1 s r print1</div><div class="line">printmid 2 s r print2</div><div class="line">printmid 3 s r print3</div><div class="line">printmid _ _ l head</div><div class="line">print0 0 0 r print0</div><div class="line">print0 1 0 r print1</div><div class="line">print0 2 0 r print2</div><div class="line">print0 3 0 r print3</div><div class="line">print0 _ 0 l fine</div><div class="line">print1 0 1 r print0</div><div class="line">print1 1 1 r print1</div><div class="line">print1 2 1 r print2</div><div class="line">print1 3 1 r print3</div><div class="line">print1 _ 1 l fine</div><div class="line">print2 0 2 r print0</div><div class="line">print2 1 2 r print1</div><div class="line">print2 2 2 r print2</div><div class="line">print2 3 2 r print3</div><div class="line">print2 _ 2 l fine</div><div class="line">print3 0 3 r print0</div><div class="line">print3 1 3 r print1</div><div class="line">print3 2 3 r print2</div><div class="line">print3 3 3 r print3</div><div class="line">print3 _ 1 l fine</div><div class="line">fine s s r print</div><div class="line">fine * * l fine</div><div class="line">head * * l head</div><div class="line">head _ _ r out0</div><div class="line">out0 0 a r out0a</div><div class="line">out0 1 a r out1a</div><div class="line">out0 2 b r out2b</div><div class="line">out0 3 b r out3b</div><div class="line">out0 _ _ * halt</div><div class="line">out0a * a r out0</div><div class="line">out1a * b r out0</div><div class="line">out2b * a r out0</div><div class="line">out3b * b r out0</div></pre></td></tr></table></figure><h4 id="15-Replace-odd-and-even-letters-of-a-word-in-alphabet-a-b"><a href="#15-Replace-odd-and-even-letters-of-a-word-in-alphabet-a-b" class="headerlink" title="15.Replace odd and even letters of a word in alphabet {a,b}"></a>15.Replace odd and even letters of a word in alphabet {a,b}</h4><p>intput : ababab</p><p>output: bababa</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">0 a a r a1</div><div class="line">0 b b r b1</div><div class="line">0 _ _ * halt</div><div class="line">a1 b a l b2</div><div class="line">a1 a a l a2</div><div class="line">a1 _ _ * halt</div><div class="line">b1 b b l b2</div><div class="line">b1 a b l a2</div><div class="line">b1 _ _ * halt</div><div class="line">b2 * b r nxt</div><div class="line">a2 * a r nxt</div><div class="line">nxt * * r 0</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;author: Yu Zhang  张宇&lt;/p&gt;
&lt;p&gt;student ID : 17130110026&lt;/p&gt;
&lt;p&gt;Serial number: 28&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The PDF is provided with 
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>20191002</title>
    <link href="http://yoursite.com/2019/10/02/20191002/"/>
    <id>http://yoursite.com/2019/10/02/20191002/</id>
    <published>2019-10-02T06:13:07.000Z</published>
    <updated>2019-10-02T08:45:05.563Z</updated>
    
    <content type="html"><![CDATA[<p>#2942</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#2942&lt;/p&gt;

      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>20190930自闭日记</title>
    <link href="http://yoursite.com/2019/09/30/20190930%E8%87%AA%E9%97%AD%E6%97%A5%E8%AE%B0/"/>
    <id>http://yoursite.com/2019/09/30/20190930自闭日记/</id>
    <published>2019-09-30T09:51:34.000Z</published>
    <updated>2019-10-02T05:34:59.273Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1838"><a href="#1838" class="headerlink" title="1838"></a>1838</h1><p>弱智题，用scanf反而比read快，用卡常数</p><h1 id="1305"><a href="#1305" class="headerlink" title="1305"></a>1305</h1><blockquote><p><strong>费马大定理</strong> :n&gt;=3时</p><p>​                        $x^n+y^n=z^n$</p><p>没有正整数解</p><p>本源勾股数组：三元组<a,b,c>，其中a,b,c没有公因数且$a^2+b^2=c^2$</a,b,c></p><ul><li>a,b奇偶不同，且c总为奇数</li><li>c-b与c+b都是平方数</li><li>c-b=$t^2$,c+b=$s^2$<ul><li>a = st  ,b = $\frac{s^2-t^2}{2}$ , c=$\frac{s^2+t^2}{2}$</li></ul></li></ul><p>据说容易证明s与t是奇数且互质，但是我不知道为啥</p><p>所以只要枚举s和t就可以枚举出本源勾股数组，然后翻倍得到所以勾股数组</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1838&quot;&gt;&lt;a href=&quot;#1838&quot; class=&quot;headerlink&quot; title=&quot;1838&quot;&gt;&lt;/a&gt;1838&lt;/h1&gt;&lt;p&gt;弱智题，用scanf反而比read快，用卡常数&lt;/p&gt;
&lt;h1 id=&quot;1305&quot;&gt;&lt;a href=&quot;#1305&quot; clas
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>20190811</title>
    <link href="http://yoursite.com/2019/09/12/20190811/"/>
    <id>http://yoursite.com/2019/09/12/20190811/</id>
    <published>2019-09-12T05:48:33.000Z</published>
    <updated>2019-09-12T05:49:49.817Z</updated>
    
    <content type="html"><![CDATA[<p>����</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;����&lt;/p&gt;

      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>20190809</title>
    <link href="http://yoursite.com/2019/09/12/20190809/"/>
    <id>http://yoursite.com/2019/09/12/20190809/</id>
    <published>2019-09-12T05:48:16.000Z</published>
    <updated>2019-09-12T05:50:25.960Z</updated>
    
    <content type="html"><![CDATA[<h3 id="线性基"><a href="#线性基" class="headerlink" title="线性基"></a>线性基</h3><p>一个比较好的解释：</p><p>设数集 S 的值域范围为[1,2n−1] T 是 S 的线性基 T={t1,t2,t3,…,tn}（ tx 的最高位的 1 在第 x 位） </p><p>T 中元素互相异或所形成的集合，等价于原数集 S 的元素互相异或形成的集合简单点，可以理解为将原数集进行了压缩</p><p>总所周知，只要两个基向量(0,1)(1,0)就能表示二维空间里的所有向量</p><p>对于数组S，他的任意子序列异或起来的值构成一个新集合SB，显然这个集合的元素很多很多，直接用数组存不太好，于是我们也希望能给他搞几个“基”，然后通过异或这些基来得到SB中的每一个元素，于是就有了线性基。这时候可能就有人问了，那直接用原数组S不就好了嘛，主要还是因为线性基好计算，方便进行各种骚操作。</p><h3 id="构造线性基"><a href="#构造线性基" class="headerlink" title="构造线性基"></a>构造线性基</h3><p>依次插入数，从位数的高到低插入 如果该位无元素(0)，将目前元素放进去 如果改为有元素，异或后处理更低一位 </p><p>比如101 111 11(二进制表示)</p><p>第一次101插进去 s[3]=101</p><p>第二次111插进去，111最高为为3，但是s[3]已经名花有主了，所以111^101 = 10 ，s[2]=10</p><blockquote><p>机智的你们肯定发现了，只要这样处理下去，判断到第i位，大于第i位的数字都为0，如果所有位都有数字的话，若最高位为第n位，所能表示的最大数字位$2^n$,因为每一位异或都能想办法使当前位变为1，最终使所有位都变成1</p></blockquote><p>第三次插11，11^s[3]^s[2]=0,所以就什么都不用干了（即现有的线性基能表示11）</p><blockquote><p>论如何保证线性基span出来的空间和原数组span出来的空间是相同的，很明显啊 因为n^n =0，0^n=n,所以线性基异或出来的数相当于是原数组子集异或出来的</p></blockquote><p>这里保证了线性基是线性无关的。</p><p>学过线代的大家就能明白线性基的原理了（什么？你没学过线代，那就快去学叭）</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">int</span> arr[N];<span class="comment">//原函数</span></div><div class="line"><span class="keyword">int</span> r[<span class="number">32</span>];<span class="comment">//线性基 </span></div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">ins</span><span class="params">(<span class="keyword">int</span> x)</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">31</span>;i&gt;=<span class="number">0</span>;i--)</div><div class="line">    <span class="keyword">if</span>(x&gt;&gt;i)</div><div class="line">        &#123;</div><div class="line">            <span class="keyword">if</span>(!r[i])</div><div class="line">            &#123;</div><div class="line">                r[i] = x;</div><div class="line">                <span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">            &#125;</div><div class="line">            x ^= r[i];</div><div class="line">            <span class="keyword">if</span>(!x)<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">        &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>基础应用</p><p>异或最大值：贪心从高到低贪心选择或不选择 </p><p>异或最小值：贪心从低到高位选择第一个非空元素 </p><p>异或判特值：贪心处理直到为0</p><p>异或个数：因为每个元素都是处理出来相对独立的，答案为2$^{集合个数} $</p><p>异或K小值：$2^i$小值就是第i−1个元素贪心地与前面处理的结果，然后对K拆位处理 </p><p>线性基合并：暴力插入即可(相当于把v1的线性基加到v2数组中)</p><p>引理：<strong><em>若V1，V2是线性空间，B1，B2分别是他们的一组基，令W=B2∩V1，若B1∪（B2\W)线性无关，则W是V1∩V2的一组基</em></strong></p><p> 证明：</p><p>若v∈V1∩V2，则v可同时呗B1和B2表示出。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;线性基&quot;&gt;&lt;a href=&quot;#线性基&quot; class=&quot;headerlink&quot; title=&quot;线性基&quot;&gt;&lt;/a&gt;线性基&lt;/h3&gt;&lt;p&gt;一个比较好的解释：&lt;/p&gt;
&lt;p&gt;设数集 S 的值域范围为[1,2n−1] T 是 S 的线性基 T={t1,t2,t3,…,tn}
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>20190807</title>
    <link href="http://yoursite.com/2019/09/12/20190807/"/>
    <id>http://yoursite.com/2019/09/12/20190807/</id>
    <published>2019-09-12T05:48:02.000Z</published>
    <updated>2019-09-12T05:48:02.397Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>20190806</title>
    <link href="http://yoursite.com/2019/09/12/20190806/"/>
    <id>http://yoursite.com/2019/09/12/20190806/</id>
    <published>2019-09-12T05:47:49.000Z</published>
    <updated>2019-09-12T05:49:01.047Z</updated>
    
    <content type="html"><![CDATA[<p>ѧ���º�׺�Զ���������������</p><p>д��һ������Ī����Ȩֵ�߶�������</p><p>�߶���д�˸�update��1��mid��pos&lt;&lt;1,x,d��һֱÿ��������ɵ��</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;ѧ���º�׺�Զ���������������&lt;/p&gt;
&lt;p&gt;д��һ������Ī����Ȩֵ�߶�������&lt;/p&gt;
&lt;p&gt;�߶���д�˸�update��1��mid��pos&amp;lt;&amp;lt;1,x,d��һֱÿ��������ɵ��&lt;/p&gt;

      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>8.5</title>
    <link href="http://yoursite.com/2019/08/06/8-5/"/>
    <id>http://yoursite.com/2019/08/06/8-5/</id>
    <published>2019-08-06T00:25:11.000Z</published>
    <updated>2019-08-06T00:25:48.438Z</updated>
    
    <content type="html"><![CDATA[<p>总结（x） 反思（√）</p><p>poj2728 </p><p>裸的斜率优化生成树</p><p>sb题竟然花了我接近两个小时？？？？</p><p>1000个点的完全图我竟然去写了个链式向前星？？？睿智行为</p><p>链式向前星+堆优化的prim怎么写样例怎么跑不过？？？</p><p>最后邻接矩阵+普通prim一发就过了，真的是日了狗</p><p>一开始写二分竟然睿智地写了 l=mid+1 而且还完全没觉得自己有问题。果然睡眠不足会导致人变蠢。</p><p>01分数规划除了二分还有一个迭代写法，无法证明复杂度姑且认为复杂度差不多，但据说迭代法有的情况不一定能用。</p><p>poj3621</p><p>这个傻逼题又花了我一个半小时？？？艹</p><p>二分x，用spfa判断负环</p><p>看见1000个点直接用了邻接矩阵，但是有的边不存在导致一堆bug，最后又改回了链式向前星。（果然建图要灵活取舍）</p><p>中间样例一直跑不过，搞了快半小时发现看错题了，是一个有向图，我写成无向图了。</p><p>改完之后样例跑过了，然后一交还是wa，后来对着别人代码改，发现时自带的abs不行，自己写了个myabs就过了？？？？？？什么玩意？？？？？</p><p>codeforce #577（div）c</p><p>傻逼题，又傻逼了，没考虑中间跳出时的一种情况</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;总结（x） 反思（√）&lt;/p&gt;
&lt;p&gt;poj2728 &lt;/p&gt;
&lt;p&gt;裸的斜率优化生成树&lt;/p&gt;
&lt;p&gt;sb题竟然花了我接近两个小时？？？？&lt;/p&gt;
&lt;p&gt;1000个点的完全图我竟然去写了个链式向前星？？？睿智行为&lt;/p&gt;
&lt;p&gt;链式向前星+堆优化的prim怎么写样例怎么跑
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>8.4总结</title>
    <link href="http://yoursite.com/2019/08/05/8-4%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2019/08/05/8-4总结/</id>
    <published>2019-08-04T16:19:04.000Z</published>
    <updated>2019-08-04T16:20:35.050Z</updated>
    
    <content type="html"><![CDATA[<p>淀粉质<br>poj1741</p><p>淀粉质水题，套个板子就过了</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 0x3f3f3f3f</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e4</span>+<span class="number">10</span>;</div><div class="line"></div><div class="line"><span class="keyword">int</span> head[N];</div><div class="line"><span class="keyword">int</span> n,m;</div><div class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Edg</span></span></div><div class="line"><span class="class">&#123;</span></div><div class="line">    <span class="keyword">int</span> v,w,nxt;</div><div class="line">&#125;e[N&lt;&lt;<span class="number">2</span>];</div><div class="line"><span class="keyword">int</span> cnt;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">addedge</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> w)</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">    e[cnt].v = v;</div><div class="line">    e[cnt].w = w;</div><div class="line">    e[cnt].nxt = head[u];</div><div class="line">    head[u] = cnt++;</div><div class="line">&#125;</div><div class="line"><span class="keyword">int</span> sz[N],vis[N],mx,size,son[N],rt;</div><div class="line">ll d[N],q[N],l,r;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">findrt</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> fa)</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">    sz[u] = <span class="number">1</span>,son[u] = <span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=head[u];~i;i=e[i].nxt)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">int</span> v = e[i].v;</div><div class="line">        <span class="keyword">if</span>(vis[v]||v==fa)<span class="keyword">continue</span>;</div><div class="line">        findrt(v,u);</div><div class="line">        sz[u]+=sz[v];</div><div class="line">        <span class="keyword">if</span>(sz[v]&gt;son[u])</div><div class="line">            son[u]=sz[v];</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span>(size-sz[u]&gt;son[u])</div><div class="line">        son[u]=size-sz[u];</div><div class="line">    <span class="keyword">if</span>(son[u]&lt;mx)</div><div class="line">        mx=son[u],rt = u;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">getdis</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> fa)</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">    q[++r]=d[u];</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=head[u];~i;i=e[i].nxt)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">int</span> v = e[i].v;</div><div class="line">        <span class="keyword">if</span>(v==fa||vis[v])<span class="keyword">continue</span>;</div><div class="line">        d[v]=d[u]+e[i].w;</div><div class="line">        getdis(v,u);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="function">ll <span class="title">calc</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> val)</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">    r = <span class="number">0</span>;</div><div class="line">    d[u] = val;</div><div class="line">    getdis(u,<span class="number">0</span>);</div><div class="line">    ll sum=<span class="number">0</span>;l=<span class="number">1</span>;</div><div class="line">    sort(q+<span class="number">1</span>,q+r+<span class="number">1</span>);</div><div class="line">    <span class="keyword">while</span>(l&lt;r)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">if</span>(q[l]+q[r]&lt;=m)</div><div class="line">            sum+=r-l,++l;</div><div class="line">        <span class="keyword">else</span></div><div class="line">            --r;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> sum;</div><div class="line">&#125;</div><div class="line">ll ans=<span class="number">0</span>;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u)</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">    ans+=calc(u,<span class="number">0</span>);</div><div class="line">    vis[u]=<span class="number">1</span>;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=head[u];~i;i=e[i].nxt)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">int</span> v = e[i].v;</div><div class="line">        <span class="keyword">if</span>(vis[v])<span class="keyword">continue</span>;</div><div class="line">        ans -= calc(v,e[i].w);</div><div class="line">        size=sz[v];</div><div class="line">        mx = inf;</div><div class="line">        findrt(v,<span class="number">0</span>);</div><div class="line">        dfs(rt);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m,n&amp;&amp;m)</div><div class="line">    &#123;</div><div class="line">        <span class="built_in">memset</span>(d,<span class="number">0</span>,<span class="keyword">sizeof</span>(d));</div><div class="line">        <span class="built_in">memset</span>(sz,<span class="number">0</span>,<span class="keyword">sizeof</span>(sz));</div><div class="line">        <span class="built_in">memset</span>(son,<span class="number">0</span>,<span class="keyword">sizeof</span>(son));</div><div class="line">        <span class="built_in">memset</span>(head,<span class="number">-1</span>,<span class="keyword">sizeof</span>(head));</div><div class="line">        <span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</div><div class="line">        cnt=ans=<span class="number">0</span>;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;++i)</div><div class="line">        &#123;</div><div class="line">            <span class="keyword">int</span> u,v,w;<span class="built_in">cin</span>&gt;&gt;u&gt;&gt;v&gt;&gt;w;</div><div class="line">            addedge(u,v,w);</div><div class="line">            addedge(v,u,w);</div><div class="line">        &#125;</div><div class="line">        size = n;</div><div class="line">        mx = inf;</div><div class="line">        findrt(<span class="number">1</span>,<span class="number">0</span>);</div><div class="line">        dfs(rt);</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>bzoj2152</p><p>也是水题，没什么好说的</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 0x3f3f3f3f</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></div><div class="line"><span class="class"><span class="title">inline</span> <span class="title">void</span> <span class="title">read</span>(<span class="title">T</span>&amp; <span class="title">n</span>)</span></div><div class="line"><span class="class">&#123;</span></div><div class="line">    T X=<span class="number">0</span>,w=<span class="number">1</span>;<span class="keyword">char</span> ch = <span class="number">-1</span>;</div><div class="line">    <span class="keyword">while</span>(ch&lt;<span class="string">'0'</span> ||ch&gt;<span class="string">'9'</span>)&#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)w=<span class="number">-1</span>;ch=getchar();&#125;</div><div class="line">    <span class="keyword">while</span>(ch&gt;=<span class="string">'0'</span> &amp;&amp;ch&lt;=<span class="string">'9'</span>)&#123;X = (X&lt;&lt;<span class="number">3</span>)+(X&lt;&lt;<span class="number">1</span>)+ch-<span class="string">'0'</span>;ch=getchar();&#125;</div><div class="line">    n = X*w;</div><div class="line">&#125;</div><div class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll a,ll b)</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line"><span class="keyword">return</span> b?gcd(b,a%b):a;</div><div class="line">&#125;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">2e4</span>+<span class="number">10</span>;</div><div class="line"><span class="keyword">int</span> head[N];</div><div class="line"><span class="keyword">int</span> n,m;</div><div class="line"><span class="class"><span class="keyword">struct</span> <span class="title">E</span></span></div><div class="line"><span class="class">&#123;</span></div><div class="line">    <span class="keyword">int</span> v,w,nxt;</div><div class="line">&#125;e[N&lt;&lt;<span class="number">2</span>];</div><div class="line"><span class="keyword">int</span> cnt;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">addedge</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> w)</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">    e[cnt].v = v;</div><div class="line">    e[cnt].w = w;</div><div class="line">    e[cnt].nxt = head[u];</div><div class="line">    head[u] = cnt++;  </div><div class="line">    e[cnt].v = u;</div><div class="line">    e[cnt].w = w;</div><div class="line">    e[cnt].nxt = head[v];</div><div class="line">    head[v] = cnt++;  </div><div class="line">&#125;</div><div class="line"><span class="keyword">int</span> sz[N],vis[N],mx,size,son[N],root;</div><div class="line">ll dis[N],q[N],l,r,ans;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">    <span class="built_in">memset</span>(dis,<span class="number">0</span>,<span class="keyword">sizeof</span>(dis));</div><div class="line">    <span class="built_in">memset</span>(sz,<span class="number">0</span>,<span class="keyword">sizeof</span>(sz));</div><div class="line">    <span class="built_in">memset</span>(son,<span class="number">0</span>,<span class="keyword">sizeof</span>(son));</div><div class="line">    <span class="built_in">memset</span>(head,<span class="number">-1</span>,<span class="keyword">sizeof</span>(head));</div><div class="line">    <span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</div><div class="line">    cnt=ans=<span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">findrt</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> fa)</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">    sz[u] = <span class="number">1</span>,son[u] = <span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=head[u];~i;i=e[i].nxt)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">int</span> v = e[i].v;</div><div class="line">        <span class="keyword">if</span>(vis[v]||v==fa)<span class="keyword">continue</span>;</div><div class="line">        findrt(v,u);</div><div class="line">        sz[u]+=sz[v];</div><div class="line">        <span class="keyword">if</span>(sz[v]&gt;son[u])</div><div class="line">            son[u]=sz[v];</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span>(size-sz[u]&gt;son[u])</div><div class="line">        son[u]=size-sz[u];</div><div class="line">    <span class="keyword">if</span>(son[u]&lt;mx)</div><div class="line">        mx = son[u],root = u;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">getdis</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> fa)</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">    q[dis[u]%<span class="number">3</span>]++;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=head[u];~i;i=e[i].nxt)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">int</span> v = e[i].v;</div><div class="line">        <span class="keyword">if</span>(v==fa||vis[v])<span class="keyword">continue</span>;</div><div class="line">        dis[v] = dis[u]+e[i].w;</div><div class="line">        getdis(v,u);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="function">ll <span class="title">calc</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> val)</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">    q[<span class="number">0</span>]=q[<span class="number">1</span>]=q[<span class="number">2</span>]=<span class="number">0</span>;</div><div class="line">    dis[u] = val;</div><div class="line">    <span class="comment">//q[dis[u]%3]++;</span></div><div class="line">    getdis(u,<span class="number">0</span>);</div><div class="line">    ll sum=<span class="number">0</span>;</div><div class="line">    sum+=<span class="number">1l</span>l*q[<span class="number">0</span>]*(q[<span class="number">0</span>]<span class="number">-1</span>)/<span class="number">2</span>+q[<span class="number">1</span>]*q[<span class="number">2</span>];</div><div class="line">    <span class="keyword">return</span> sum;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u)</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line"><span class="comment">//cout&lt;&lt;" "&lt;&lt;u&lt;&lt;endl;</span></div><div class="line"><span class="comment">//cout&lt;&lt;ans&lt;&lt;endl;</span></div><div class="line">    ans+=calc(u,<span class="number">0</span>);</div><div class="line">    <span class="comment">//cout&lt;&lt;ans&lt;&lt;endl;</span></div><div class="line">    vis[u]=<span class="number">1</span>;</div><div class="line">    <span class="keyword">int</span> totsz = size;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=head[u];~i;i=e[i].nxt)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">int</span> v = e[i].v;</div><div class="line">        <span class="keyword">if</span>(vis[v])<span class="keyword">continue</span>;</div><div class="line">        ans -= calc(v,e[i].w);</div><div class="line">        size=sz[v]&gt;sz[u]?totsz-sz[u]:sz[v];</div><div class="line">        <span class="comment">//size=sz[v];</span></div><div class="line">mx = inf;</div><div class="line">        findrt(v,<span class="number">0</span>);</div><div class="line">        dfs(root);</div><div class="line">    &#125;</div><div class="line">    <span class="comment">//cout&lt;&lt;" "&lt;&lt;u&lt;&lt;" "&lt;&lt;ans&lt;&lt;endl;</span></div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">        <span class="built_in">cin</span>&gt;&gt;n;</div><div class="line">        init();</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;++i)</div><div class="line">        &#123;</div><div class="line">            <span class="keyword">int</span> u,v,w;<span class="built_in">cin</span>&gt;&gt;u&gt;&gt;v&gt;&gt;w;</div><div class="line">            addedge(u,v,w);</div><div class="line">        &#125;</div><div class="line">        size = n;</div><div class="line">        mx = inf;</div><div class="line">        findrt(<span class="number">1</span>,<span class="number">0</span>);</div><div class="line">        dfs(root);</div><div class="line">       ans=ans*<span class="number">2</span>+n;</div><div class="line">ll gs = gcd(n*n,ans);</div><div class="line"><span class="built_in">printf</span>(<span class="string">"%lld/%lld\n"</span>,ans/gs,<span class="number">1l</span>l*n*n/gs);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>补题：</p><p>牛客第二场A</p><p>打表找规律，每个点概率都是$\frac{1}{n-1}$,其实想一想觉得很有道理，瞎鸡儿走走到最后只剩一个点，每个点都有可能是最后一个点（除了起点），所以一个点是最后一个点的概率为$\frac{1}{n-1}$</p><p>注意题目要求每个答案要乘以之前的答案，原因不明</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 1000000007</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function">ll <span class="title">qpow</span><span class="params">(ll a,ll b)</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">ll ret=<span class="number">1</span>;</div><div class="line"><span class="keyword">while</span>(b)</div><div class="line">&#123;</div><div class="line"><span class="keyword">if</span>(b&amp;<span class="number">1</span>)ret=(ret*a)%mod;</div><div class="line">a=(a*a)%mod;</div><div class="line">b&gt;&gt;=<span class="number">1</span>;</div><div class="line">&#125;</div><div class="line"><span class="keyword">return</span> ret;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line"><span class="keyword">int</span> T;<span class="built_in">cin</span>&gt;&gt;T;</div><div class="line">ll ans=<span class="number">1</span>;</div><div class="line"><span class="keyword">while</span>(T--)</div><div class="line">&#123;</div><div class="line">ll a,b;<span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b;</div><div class="line"><span class="keyword">if</span>(a==<span class="number">1</span>)</div><div class="line">ans*=<span class="number">1</span>;</div><div class="line"><span class="keyword">else</span> <span class="keyword">if</span>(b==<span class="number">0</span>)</div><div class="line">ans*=<span class="number">0</span>;</div><div class="line"><span class="keyword">else</span></div><div class="line">ans=qpow(a<span class="number">-1</span>,mod<span class="number">-2</span>)*ans%mod;</div><div class="line"><span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">&#125;</div><div class="line"><span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>B</p><p>易得</p><p>dp[i] = $\frac{1}{k}$(dp[i-1]+dp[i-2]+….+dp[max(i-k,0)])</p><p>矩阵快速幂能做复杂度O($Tk^2logN$ )，5s应该t不了</p><p>这里学会了套BM，复杂度不知道多少，看代码大概也是logN</p><p>网上的傻逼博客基本都是对着抄的，基本只有一句8项就能推后面的，然而8项是不够的，递推式有多少项就至少开这个数的两倍。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,a,n) for (int i=a;i&lt;n;i++)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> per(i,a,n) for (int i=n-1;i&gt;=a;i--)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> mp make_pair</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> all(x) (x).begin(),(x).end()</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> fi first</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> se second</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> SZ(x) ((int)(x).size())</span></div><div class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; VI;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; PII;</div><div class="line"><span class="keyword">const</span> ll mod=<span class="number">1000000007</span>;</div><div class="line"><span class="function">ll <span class="title">powmod</span><span class="params">(ll a,ll b)</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">    ll res=<span class="number">1</span>;</div><div class="line">    a%=mod;</div><div class="line">    assert(b&gt;=<span class="number">0</span>);</div><div class="line">    <span class="keyword">for</span>(; b; b&gt;&gt;=<span class="number">1</span>)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>)res=res*a%mod;</div><div class="line">        a=a*a%mod;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> res;</div><div class="line">&#125;</div><div class="line">ll _,n;</div><div class="line"><span class="keyword">namespace</span> linear_seq</div><div class="line">&#123;</div><div class="line">    <span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">20010</span>;</div><div class="line">    ll res[N],base[N],_c[N],_md[N];</div><div class="line">    <span class="built_in">vector</span>&lt;ll&gt; Md;</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">mul</span><span class="params">(ll *a,ll *b,<span class="keyword">int</span> k)</span></span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        rep(i,<span class="number">0</span>,k+k) _c[i]=<span class="number">0</span>;</div><div class="line">        rep(i,<span class="number">0</span>,k) <span class="keyword">if</span> (a[i]) rep(j,<span class="number">0</span>,k) _c[i+j]=(_c[i+j]+a[i]*b[j])%mod;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=k+k<span class="number">-1</span>; i&gt;=k; i--) <span class="keyword">if</span> (_c[i])</div><div class="line">                rep(j,<span class="number">0</span>,SZ(Md)) _c[i-k+Md[j]]=(_c[i-k+Md[j]]-_c[i]*_md[Md[j]])%mod;</div><div class="line">        rep(i,<span class="number">0</span>,k) a[i]=_c[i];</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">int</span> <span class="title">solve</span><span class="params">(ll n,VI a,VI b)</span></span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        ll ans=<span class="number">0</span>,pnt=<span class="number">0</span>;</div><div class="line">        <span class="keyword">int</span> k=SZ(a);</div><div class="line">        assert(SZ(a)==SZ(b));</div><div class="line">        rep(i,<span class="number">0</span>,k) _md[k<span class="number">-1</span>-i]=-a[i];</div><div class="line">        _md[k]=<span class="number">1</span>;</div><div class="line">        Md.clear();</div><div class="line">        rep(i,<span class="number">0</span>,k) <span class="keyword">if</span> (_md[i]!=<span class="number">0</span>) Md.push_back(i);</div><div class="line">        rep(i,<span class="number">0</span>,k) res[i]=base[i]=<span class="number">0</span>;</div><div class="line">        res[<span class="number">0</span>]=<span class="number">1</span>;</div><div class="line">        <span class="keyword">while</span> ((<span class="number">1l</span>l&lt;&lt;pnt)&lt;=n) pnt++;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> p=pnt; p&gt;=<span class="number">0</span>; p--)</div><div class="line">        &#123;</div><div class="line">            mul(res,res,k);</div><div class="line">            <span class="keyword">if</span> ((n&gt;&gt;p)&amp;<span class="number">1</span>)</div><div class="line">            &#123;</div><div class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i=k<span class="number">-1</span>; i&gt;=<span class="number">0</span>; i--) res[i+<span class="number">1</span>]=res[i];</div><div class="line">                res[<span class="number">0</span>]=<span class="number">0</span>;</div><div class="line">                rep(j,<span class="number">0</span>,SZ(Md)) res[Md[j]]=(res[Md[j]]-res[k]*_md[Md[j]])%mod;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        rep(i,<span class="number">0</span>,k) ans=(ans+res[i]*b[i])%mod;</div><div class="line">        <span class="keyword">if</span> (ans&lt;<span class="number">0</span>) ans+=mod;</div><div class="line">        <span class="keyword">return</span> ans;</div><div class="line">    &#125;</div><div class="line">    <span class="function">VI <span class="title">BM</span><span class="params">(VI s)</span></span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        VI C(1,1),B(1,1);</div><div class="line">        <span class="keyword">int</span> L=<span class="number">0</span>,m=<span class="number">1</span>,b=<span class="number">1</span>;</div><div class="line">        rep(n,<span class="number">0</span>,SZ(s))</div><div class="line">        &#123;</div><div class="line">            ll d=<span class="number">0</span>;</div><div class="line">            rep(i,<span class="number">0</span>,L+<span class="number">1</span>) d=(d+(ll)C[i]*s[n-i])%mod;</div><div class="line">            <span class="keyword">if</span> (d==<span class="number">0</span>) ++m;</div><div class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">2</span>*L&lt;=n)</div><div class="line">            &#123;</div><div class="line">                VI T=C;</div><div class="line">                ll c=mod-d*powmod(b,mod<span class="number">-2</span>)%mod;</div><div class="line">                <span class="keyword">while</span> (SZ(C)&lt;SZ(B)+m) C.pb(<span class="number">0</span>);</div><div class="line">                rep(i,<span class="number">0</span>,SZ(B)) C[i+m]=(C[i+m]+c*B[i])%mod;</div><div class="line">                L=n+<span class="number">1</span>-L;</div><div class="line">                B=T;</div><div class="line">                b=d;</div><div class="line">                m=<span class="number">1</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span></div><div class="line">            &#123;</div><div class="line">                ll c=mod-d*powmod(b,mod<span class="number">-2</span>)%mod;</div><div class="line">                <span class="keyword">while</span> (SZ(C)&lt;SZ(B)+m) C.pb(<span class="number">0</span>);</div><div class="line">                rep(i,<span class="number">0</span>,SZ(B)) C[i+m]=(C[i+m]+c*B[i])%mod;</div><div class="line">                ++m;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> C;</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">int</span> <span class="title">gao</span><span class="params">(VI a,ll n)</span></span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        VI c=BM(a);</div><div class="line">        c.erase(c.begin());</div><div class="line">        rep(i,<span class="number">0</span>,SZ(c)) c[i]=(mod-c[i])%mod;</div><div class="line">        <span class="keyword">return</span> solve(n,c,VI(a.begin(),a.begin()+SZ(c)));</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line">ll f[<span class="number">2050</span>];</div><div class="line"><span class="function">ll <span class="title">qpow</span><span class="params">(ll a,ll b)</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">    ll ret=<span class="number">1</span>;</div><div class="line">    <span class="keyword">while</span>(b)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>) ret=(a*ret)%mod;</div><div class="line">        a=(a*a)%mod;</div><div class="line">        b&gt;&gt;=<span class="number">1</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> ret;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">    <span class="keyword">int</span> T;<span class="built_in">cin</span>&gt;&gt;T;</div><div class="line">    <span class="keyword">while</span>(T--)</div><div class="line">    &#123;</div><div class="line">        ll n,m;</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld%lld"</span>,&amp;n,&amp;m);</div><div class="line">        <span class="keyword">if</span>(m==<span class="number">-1</span>)</div><div class="line">        &#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,<span class="number">2</span>*qpow(n+<span class="number">1</span>,mod<span class="number">-2</span>)%mod);</div><div class="line">        <span class="keyword">continue</span>;</div><div class="line">        &#125;</div><div class="line">        f[<span class="number">0</span>]=<span class="number">1</span>;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">2</span>*n;i++)</div><div class="line">        &#123;</div><div class="line">        f[i]=<span class="number">0</span>;</div><div class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n&amp;&amp;i-j&gt;=<span class="number">0</span>;j++)</div><div class="line">                f[i]=(f[i]+f[i-j])%mod;</div><div class="line">            f[i]=(f[i]*qpow(n,mod<span class="number">-2</span>))%mod;</div><div class="line">        &#125;</div><div class="line">        <span class="comment">//cout&lt;&lt;f[1]&lt;&lt;endl;</span></div><div class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;v;</div><div class="line">        <span class="comment">//v.clear();</span></div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">2</span>*n;i++)</div><div class="line">            v.push_back(f[i]);</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,linear_seq::gao(v,m)%mod);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>D</p><p>贪心，没什么好说的，标称用来int128来存状态，只有Linux能跑，说不出话。</p><p>用bitset存状态，对每个用biset来存相邻的点，对于每个团拓展这个点只要满足团里的点的bitset&amp;这个点相邻的点的bitset=团里的点的bitset 就说明了这个点与团里的点都相邻。</p><p>用优先队列维护bitset，每次取点权和最小的团，然后拓展，要求拓展点必须比团里点都大就可以避免重复，取到第k个就是第k小。复杂度O(knlogn) 看起来很大，其实是kn是取不满的，而且有时限两秒，问题不大。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bitset&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 0x3f3f3f3f</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></div><div class="line"><span class="class"><span class="title">inline</span> <span class="title">void</span> <span class="title">read</span>(<span class="title">T</span>&amp; <span class="title">n</span>)</span></div><div class="line"><span class="class">&#123;</span></div><div class="line">    T X=<span class="number">0</span>,w=<span class="number">1</span>;<span class="keyword">char</span> ch = <span class="number">-1</span>;</div><div class="line">    <span class="keyword">while</span>(ch&lt;<span class="string">'0'</span> ||ch&gt;<span class="string">'9'</span>)&#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)w=<span class="number">-1</span>;ch=getchar();&#125;</div><div class="line">    <span class="keyword">while</span>(ch&gt;=<span class="string">'0'</span> &amp;&amp;ch&lt;=<span class="string">'9'</span>)&#123;X = (X&lt;&lt;<span class="number">3</span>)+(X&lt;&lt;<span class="number">1</span>)+ch-<span class="string">'0'</span>;ch=getchar();&#125;</div><div class="line">    n = X*w;</div><div class="line">&#125;</div><div class="line">ll wei[<span class="number">110</span>];</div><div class="line"><span class="built_in">bitset</span>&lt;105&gt; mp[<span class="number">110</span>];</div><div class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></div><div class="line"><span class="class">&#123;</span></div><div class="line">    ll w;</div><div class="line">    <span class="built_in">bitset</span>&lt;105&gt;sc;</div><div class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span>&lt;(<span class="keyword">const</span> node &amp;u)<span class="keyword">const</span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">return</span> w&gt;u.w; </div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line">priority_queue&lt;node&gt;que;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">    <span class="keyword">int</span> n,k;read(n);read(k);</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)</div><div class="line">        <span class="built_in">cin</span>&gt;&gt;wei[i];</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;++j)</div><div class="line">        &#123;</div><div class="line">            <span class="keyword">int</span> d;<span class="built_in">scanf</span>(<span class="string">"%1d"</span>,&amp;d);</div><div class="line">            <span class="keyword">if</span>(d) mp[i][j]=<span class="number">1</span>;</div><div class="line">        &#125;</div><div class="line">    que.push(node&#123;wei[<span class="number">0</span>],<span class="number">0</span>&#125;);</div><div class="line">    <span class="comment">/*</span></div><div class="line"><span class="comment">    for(int i=1;i&lt;=n;++i)</span></div><div class="line"><span class="comment">    &#123;</span></div><div class="line"><span class="comment">        bitset&lt;105&gt;ex;</span></div><div class="line"><span class="comment">        ex[i]=1;</span></div><div class="line"><span class="comment">        que.push(node&#123;wei[i],ex&#125;);</span></div><div class="line"><span class="comment">    &#125;</span></div><div class="line"><span class="comment">    */</span></div><div class="line">    <span class="keyword">bool</span> sc=<span class="number">0</span>;</div><div class="line">    <span class="keyword">while</span>(!que.empty())</div><div class="line">    &#123;</div><div class="line">        <span class="built_in">bitset</span>&lt;105&gt; u = que.top().sc;</div><div class="line">        ll ww = que.top().w;</div><div class="line">        que.pop();</div><div class="line">        k--;</div><div class="line">        <span class="keyword">if</span>(k==<span class="number">0</span>)</div><div class="line">        &#123;</div><div class="line">            <span class="built_in">cout</span>&lt;&lt;ww&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">            <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">int</span> last=<span class="number">1</span>;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</div><div class="line">            <span class="keyword">if</span>(u[i])</div><div class="line">                last=i+<span class="number">1</span>;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=last;i&lt;=n;++i)</div><div class="line">        &#123;</div><div class="line">            <span class="keyword">if</span>(u[i]==<span class="number">1</span>)<span class="keyword">continue</span>;</div><div class="line">            <span class="keyword">if</span>((mp[i]&amp;u)==u)</div><div class="line">            &#123;</div><div class="line">                <span class="built_in">bitset</span>&lt;105&gt; v = u;</div><div class="line">                v[i]=<span class="number">1</span>;</div><div class="line">                que.push(node&#123;ww+wei[i],v&#125;);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span>(sc==<span class="number">0</span>)</div><div class="line">        <span class="built_in">puts</span>(<span class="string">"-1"</span>);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>H</p><p>直接dp能卡过去，但其实能优化，主要是数据太弱的。优化什么的有缘再说吧</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e3</span>+<span class="number">10</span>;</div><div class="line"><span class="keyword">int</span> dp[N][N];</div><div class="line"><span class="keyword">int</span> biggest=<span class="number">-1</span>,bigger=<span class="number">-1</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">    <span class="keyword">int</span> n,m;<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</div><div class="line">        &#123;</div><div class="line">            <span class="built_in">scanf</span>(<span class="string">"%1d"</span>,&amp;dp[i][j]);</div><div class="line">            dp[i][j]+=dp[i<span class="number">-1</span>][j]*dp[i][j];</div><div class="line">        &#125;</div><div class="line"></div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</div><div class="line">        &#123;</div><div class="line">            <span class="keyword">int</span> len = dp[i][j],dep=<span class="number">1</span>;</div><div class="line">            <span class="keyword">while</span>(len)</div><div class="line">            &#123;</div><div class="line">                <span class="keyword">int</span> ret =  len*dep;</div><div class="line">                <span class="keyword">if</span>(ret&gt;biggest)</div><div class="line">                &#123;</div><div class="line">                    bigger = biggest;</div><div class="line">                    biggest = ret;</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(ret&gt;bigger)</div><div class="line">                    bigger = ret;</div><div class="line">                len = min(len,dp[i][j-dep]);</div><div class="line">                dep++;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span>(bigger==<span class="number">-1</span>)bigger=<span class="number">0</span>;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,bigger);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>从d题和第5场的某一题中总结到，在判断已知图中的点和某个点所有相邻点之间的是否全集关系时，可以用bitset处理，复杂度O（1）</p><p>今天浪费了很多时间，不知道在干什么，很简单的题花了很久才a出来。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;淀粉质&lt;br&gt;poj1741&lt;/p&gt;
&lt;p&gt;淀粉质水题，套个板子就过了&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div cl
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>5.9报告--莫队orz</title>
    <link href="http://yoursite.com/2019/05/09/5-9%E6%8A%A5%E5%91%8A-%E8%8E%AB%E9%98%9Forz/"/>
    <id>http://yoursite.com/2019/05/09/5-9报告-莫队orz/</id>
    <published>2019-05-09T13:37:35.000Z</published>
    <updated>2019-05-10T07:57:46.748Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2019/05/09/5-9报告-莫队orz/1.jpg" alt="我tm搜爆"><br>莫队就是一个暴力算法<br>他可以有效的处理离线区间问题<br>对于在线的区间问题还是得用主席树<br><a href="https://blog.csdn.net/Yuzzzzzz/article/details/90049453" target="_blank" rel="external">P2709</a><br>对于这道沙雕题，普通吸氧的速度还不如直接scanf快<br>但是也因此学会了吸氧的新姿势<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> _Tp&gt; <span class="keyword">inline</span> _<span class="function">Tp <span class="title">read</span><span class="params">(_Tp&amp;x)</span></span>&#123;</div><div class="line">    <span class="keyword">char</span> c11=getchar(),ob=<span class="number">0</span>;</div><div class="line">    x=<span class="number">0</span>;</div><div class="line">    <span class="keyword">while</span>(c11^<span class="string">'-'</span>&amp;&amp;!<span class="built_in">isdigit</span>(c11))</div><div class="line">        c11=getchar();</div><div class="line">    <span class="keyword">if</span>(c11==<span class="string">'-'</span>)</div><div class="line">        c11=getchar(),ob=<span class="number">1</span>;</div><div class="line">    <span class="keyword">while</span>(<span class="built_in">isdigit</span>(c11))</div><div class="line">        x=x*<span class="number">10</span>+c11-<span class="string">'0'</span>,c11=getchar();</div><div class="line">    <span class="keyword">if</span>(ob)x=-x;</div><div class="line">    <span class="keyword">return</span> x;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;b=read(a);&#125;</div></pre></td></tr></table></figure></p><p>这应该是除了fread外最快的方法了吧（求不要打脸）</p><p><a href="https://blog.csdn.net/Yuzzzzzz/article/details/90071256" target="_blank" rel="external">BZOJ2038</a><br>我认为这题数论成分更大？</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/2019/05/09/5-9报告-莫队orz/1.jpg&quot; alt=&quot;我tm搜爆&quot;&gt;&lt;br&gt;莫队就是一个暴力算法&lt;br&gt;他可以有效的处理离线区间问题&lt;br&gt;对于在线的区间问题还是得用主席树&lt;br&gt;&lt;a href=&quot;https://blog.csdn.n
      
    
    </summary>
    
    
      <category term="垃圾莫队，浪费我时间" scheme="http://yoursite.com/tags/%E5%9E%83%E5%9C%BE%E8%8E%AB%E9%98%9F%EF%BC%8C%E6%B5%AA%E8%B4%B9%E6%88%91%E6%97%B6%E9%97%B4/"/>
    
  </entry>
  
  <entry>
    <title>2019.5.8</title>
    <link href="http://yoursite.com/2019/05/08/2019-5-8/"/>
    <id>http://yoursite.com/2019/05/08/2019-5-8/</id>
    <published>2019-05-08T08:22:47.000Z</published>
    <updated>2019-05-08T09:14:06.029Z</updated>
    
    <content type="html"><![CDATA[<p>今天又干了什么？<br>又写了一次BIT的b题，今天仍然是没过呢  </p><p><a href="https://github.com/Qwindplate/acm/blob/master/BIT%20B.cpp" target="_blank" rel="external">没过的垃圾代码</a></p><p>然后去看了一下主席树和树链剖分以及莫队算法</p><p><a href="https://blog.csdn.net/Yuzzzzzz/article/details/89955356" target="_blank" rel="external">hdoj3966</a></p><p>不要问我为什么没做莫队和主席树的题，我现在都没搞懂莫队算法</p><p>然后就是修了修电脑（哭）<br>垃圾数据库上机，配置mysql时new了系统环境，导致原来的Path全删了，今天才发现。<br> <img src="/2019/05/08/2019-5-8/timg.jpg" alt="艹!"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天又干了什么？&lt;br&gt;又写了一次BIT的b题，今天仍然是没过呢  &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/Qwindplate/acm/blob/master/BIT%20B.cpp&quot; target=&quot;_blank&quot; rel=&quot;extern
      
    
    </summary>
    
    
      <category term="报告吧" scheme="http://yoursite.com/tags/%E6%8A%A5%E5%91%8A%E5%90%A7/"/>
    
  </entry>
  
  <entry>
    <title>论如何建一个hexo</title>
    <link href="http://yoursite.com/2017/10/31/how-to-build-a-blog/"/>
    <id>http://yoursite.com/2017/10/31/how-to-build-a-blog/</id>
    <published>2017-10-31T13:57:49.945Z</published>
    <updated>2018-09-27T14:29:35.044Z</updated>
    
    <content type="html"><![CDATA[<h1 id="建什么网页，放弃吧"><a href="#建什么网页，放弃吧" class="headerlink" title="建什么网页，放弃吧"></a>建什么网页，放弃吧</h1><h2 id="1-申请一个github账号-这东西不用教了吧"><a href="#1-申请一个github账号-这东西不用教了吧" class="headerlink" title="1.申请一个github账号(这东西不用教了吧)"></a>1.申请一个github账号(这东西不用教了吧)</h2><h2 id="2-下载git-和-node-js"><a href="#2-下载git-和-node-js" class="headerlink" title="2.下载git 和 node.js"></a>2.下载git 和 node.js</h2><h2 id="3-创建一个网页（等我下载了md再写）"><a href="#3-创建一个网页（等我下载了md再写）" class="headerlink" title="3.创建一个网页（等我下载了md再写）"></a>3.创建一个网页（等我下载了md再写）</h2><h2 id="4-在一个你喜欢的地方创建一个文件夹"><a href="#4-在一个你喜欢的地方创建一个文件夹" class="headerlink" title="4.在一个你喜欢的地方创建一个文件夹"></a>4.在一个你喜欢的地方创建一个文件夹</h2><h2 id="5-在桌面鼠标右键打开git-bash"><a href="#5-在桌面鼠标右键打开git-bash" class="headerlink" title="5.在桌面鼠标右键打开git bash"></a>5.在桌面鼠标右键打开git bash</h2><h2 id="6-在git里骚操作"><a href="#6-在git里骚操作" class="headerlink" title="6.在git里骚操作"></a>6.在git里骚操作</h2><p>   下载安装 hexo<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ npm install -g hexo-cli //正确的操作</div><div class="line">$ npm install -g npm --registry = https://registry.npm.taobao.org </div><div class="line">                             //淘宝NPM镜像，如果上面那个不行就用这个吧</div></pre></td></tr></table></figure></p><p>   保存 hexo<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo --save</div><div class="line">// 安装完后可以输入命令检验安装</div><div class="line">$ hexo -v</div></pre></td></tr></table></figure></p><pre><code>初始化博客</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">//初始化博客</div><div class="line">$ hexo init</div><div class="line">//node.js的命令，根据博客既定的dependencies配置安装所有的依赖包</div><div class="line">$ npm install</div><div class="line">//运行hexo</div><div class="line">$ hexo s -g</div><div class="line">//打开浏览器，输入localhost:4000,就可以在本地看到你的个人博客了</div><div class="line">//按住Ctrl+C键即可停止运行</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;建什么网页，放弃吧&quot;&gt;&lt;a href=&quot;#建什么网页，放弃吧&quot; class=&quot;headerlink&quot; title=&quot;建什么网页，放弃吧&quot;&gt;&lt;/a&gt;建什么网页，放弃吧&lt;/h1&gt;&lt;h2 id=&quot;1-申请一个github账号-这东西不用教了吧&quot;&gt;&lt;a href=&quot;#1-
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>my first blog</title>
    <link href="http://yoursite.com/2017/10/31/my-first-blog/"/>
    <id>http://yoursite.com/2017/10/31/my-first-blog/</id>
    <published>2017-10-31T09:31:55.000Z</published>
    <updated>2017-10-31T09:35:07.816Z</updated>
    
    <content type="html"><![CDATA[<p>#测试</p>]]></content>
    
    <summary type="html">
    
      测试
    
    </summary>
    
    
      <category term="没事干，很闲" scheme="http://yoursite.com/tags/%E6%B2%A1%E4%BA%8B%E5%B9%B2%EF%BC%8C%E5%BE%88%E9%97%B2/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2017/10/28/hello-world/"/>
    <id>http://yoursite.com/2017/10/28/hello-world/</id>
    <published>2017-10-28T05:23:22.752Z</published>
    <updated>2017-10-28T05:23:22.752Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
